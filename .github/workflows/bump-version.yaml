name: Bump Version
on:
  pull_request:
    branches:
      - main
jobs:
  prebuild:
    name: Bump Version (prebuild)
    runs-on: ubuntu-latest

    # Minimum permissions required by skip-duplicate-actions
    permissions:
      actions: write
      contents: read

    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}

    steps:
      - name: Skip Duplicate Actions
        id: skip_check
        uses: fkirc/skip-duplicate-actions@v5.3.0
        with:
          concurrent_skipping: "same_content_newer"
          paths_ignore: '["**/README.md"]'
          # backtrack base on total commit exist in PR
          backtracking: ${{ github.event.pull_request.commits }}

  build:
    name: Bump Version (build)
    needs: prebuild
    if: needs.prebuild.outputs.should_skip != 'true'
    runs-on: ubuntu-latest

    # Map a step output to a job output
    outputs:
      new_tag: ${{ steps.tag_check.outputs.new_tag }}
      tag: ${{ steps.tag_check.outputs.tag }}
      part: ${{ steps.tag_check.outputs.part }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
          # depth is base from total commit exist in PR
          fetch-depth: ${{ github.event.pull_request.commits }}

      - name: Bump version and push tag
        id: tag_check 
        uses: anothrNick/github-tag-action@1.61.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: none
          RELEASE_BRANCHES: main
          DRY_RUN: true
          VERBOSE: true

  postbuild:
    name: Bump Version (postbuild)
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          # depth is base from total commit exist in PR
          fetch-depth: ${{ github.event.pull_request.commits }}

      - name: Dump Git Log 
        run: git --no-pager log
      - name: Dump GitHub context
        run: echo '${{ toJSON(github) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump needs context
        run: echo '${{ toJSON(needs) }}'
