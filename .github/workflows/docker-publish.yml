name: Docker Publish

on:
  push:
    # Publish semver tags as releases.
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Docker Publish (build)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      # packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      # id-token: write
      # This is used to upload sarif files
      security-events: write
    
    # Map a step output to a job output
    outputs:
      digest: ${{ steps.build-and-push.outputs.digest || '' }}
      tags: ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] || '' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
      
      - name: Check Cosign Version
        run: cosign version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: "arm64,arm"

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # build-args: use for overwrite ARG value inside Dockerfile
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
      
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign --key env://COSIGN_PRIVATE_KEY -a "repo=${{ github.repository }}" -a "workflow=#${{ github.run_number }}" {}@${{ steps.build-and-push.outputs.digest }}


      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"

  deploy:
    name: Docker Publish (deploy)
    needs: build
    if: (needs.build.outputs.digest != '' && needs.build.outputs.tags != '')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Private Repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.REPO_TARGET }}
          token: ${{ secrets.REPO_TOKEN }}
      
      - name: Setup yq - portable yaml processor
        uses: mikefarah/yq@v4.30.8

      - name: Update Deployment kustomize
        env:
          BUILD_DIGEST: ${{ needs.build.outputs.digest }}
          BUILD_TAGS: ${{ needs.build.outputs.tags }}
        run: |
          yq -i '.images[0].digest = strenv(BUILD_DIGEST)' ${{ secrets.REPO_KUSTOMIZE_PATH }}
          yq -i '.images[0].newTag = strenv(BUILD_TAGS)' ${{ secrets.REPO_KUSTOMIZE_PATH }}
      
      - name: Auto Commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          # prevent workflow re-trigger on commit push 
          # reference: https://docs.github.com/en/actions/managing-workflow-runs/skipping-workflow-runs
          commit_message: |
            automate: update deployment image 

            [ci skip]

      
